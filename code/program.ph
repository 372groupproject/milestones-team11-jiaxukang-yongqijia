space := BlSpace new .space show.space extent: 500 asPoint.space title: 'egg'.space root.space root background: Color veryDarkGray .parentElem := BlElement new 						background: Color black;					size: 600@600 .eleCol := 10 timesCollect: 	[ BlElement new 	 background: Color random;	size: (30 to: 40) atRandom @ (30 to: 40) atRandom;	relocate: 450 atRandom @ 450 atRandom ;	geometry: BlCircle new .].elem1 :=BlElement new	background: Color white;	size: 300@200;	geometry: BlEllipse new;	addEventHandlerOn: BlMouseDownEvent  do:		[ :evt | evt target background: Color random. ] .elem2 :=BlElement new	background: Color white;	size: 200@200;	geometry: BlEllipse new;	addEventHandlerOn: BlMouseDownEvent  do:		[ :evt | evt target background: Color random. ] .elem3 :=BlElement new	background: Color white;	size: 100@200;	geometry: BlEllipse new;	addEventHandlerOn: BlMouseDownEvent  do:		[ :evt | evt target background: Color random. ] .elem1 transform 			inherit;			rotateBy: 30;			apply.elem1 transform 			inherit;			translateBy: 10 atRandom@10;			apply.			elem1 addChild: elem2.elem1 addChild: elem3.parentElem addChild: elem1.parentElem addChildren: eleCol.space root addChild: parentElem.elem1 relocate: 50@100 . "magic"BlElementSelection  on: parentElem.